// Code generated by protoc-gen-go.
// source: ambition.proto
// DO NOT EDIT!

/*
Package ambition is a generated protocol buffer package.

It is generated from these files:
	ambition.proto

It has these top-level messages:
	CreateActionRequest
	CreateActionResponse
	CreateOccurrenceRequest
	CreateOccurrenceResponse
*/
package ambition

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/adamryman/ambition-truss/ambition/third_party/googleapis/google/api"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateActionRequest struct {
	UserId     int64  `protobuf:"varint,1,opt,name=UserId,json=userId" json:"UserId,omitempty"`
	ActionName string `protobuf:"bytes,2,opt,name=ActionName,json=actionName" json:"ActionName,omitempty"`
}

func (m *CreateActionRequest) Reset()                    { *m = CreateActionRequest{} }
func (m *CreateActionRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateActionRequest) ProtoMessage()               {}
func (*CreateActionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type CreateActionResponse struct {
	ActionId   int64  `protobuf:"varint,1,opt,name=ActionId,json=actionId" json:"ActionId,omitempty"`
	UserId     int64  `protobuf:"varint,2,opt,name=UserId,json=userId" json:"UserId,omitempty"`
	ActionName string `protobuf:"bytes,3,opt,name=ActionName,json=actionName" json:"ActionName,omitempty"`
	Error      string `protobuf:"bytes,4,opt,name=Error,json=error" json:"Error,omitempty"`
}

func (m *CreateActionResponse) Reset()                    { *m = CreateActionResponse{} }
func (m *CreateActionResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateActionResponse) ProtoMessage()               {}
func (*CreateActionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type CreateOccurrenceRequest struct {
	ActionId int64 `protobuf:"varint,1,opt,name=ActionId,json=actionId" json:"ActionId,omitempty"`
	EpocTime int64 `protobuf:"varint,2,opt,name=EpocTime,json=epocTime" json:"EpocTime,omitempty"`
}

func (m *CreateOccurrenceRequest) Reset()                    { *m = CreateOccurrenceRequest{} }
func (m *CreateOccurrenceRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateOccurrenceRequest) ProtoMessage()               {}
func (*CreateOccurrenceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type CreateOccurrenceResponse struct {
	OccurrenceId int64  `protobuf:"varint,1,opt,name=OccurrenceId,json=occurrenceId" json:"OccurrenceId,omitempty"`
	ActionId     int64  `protobuf:"varint,2,opt,name=ActionId,json=actionId" json:"ActionId,omitempty"`
	EpocTime     int64  `protobuf:"varint,3,opt,name=EpocTime,json=epocTime" json:"EpocTime,omitempty"`
	Error        string `protobuf:"bytes,4,opt,name=Error,json=error" json:"Error,omitempty"`
}

func (m *CreateOccurrenceResponse) Reset()                    { *m = CreateOccurrenceResponse{} }
func (m *CreateOccurrenceResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateOccurrenceResponse) ProtoMessage()               {}
func (*CreateOccurrenceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func init() {
	proto.RegisterType((*CreateActionRequest)(nil), "ambition.CreateActionRequest")
	proto.RegisterType((*CreateActionResponse)(nil), "ambition.CreateActionResponse")
	proto.RegisterType((*CreateOccurrenceRequest)(nil), "ambition.CreateOccurrenceRequest")
	proto.RegisterType((*CreateOccurrenceResponse)(nil), "ambition.CreateOccurrenceResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for AmbitionService service

type AmbitionServiceClient interface {
	CreateAction(ctx context.Context, in *CreateActionRequest, opts ...grpc.CallOption) (*CreateActionResponse, error)
	CreateOccurrence(ctx context.Context, in *CreateOccurrenceRequest, opts ...grpc.CallOption) (*CreateOccurrenceResponse, error)
}

type ambitionServiceClient struct {
	cc *grpc.ClientConn
}

func NewAmbitionServiceClient(cc *grpc.ClientConn) AmbitionServiceClient {
	return &ambitionServiceClient{cc}
}

func (c *ambitionServiceClient) CreateAction(ctx context.Context, in *CreateActionRequest, opts ...grpc.CallOption) (*CreateActionResponse, error) {
	out := new(CreateActionResponse)
	err := grpc.Invoke(ctx, "/ambition.AmbitionService/CreateAction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ambitionServiceClient) CreateOccurrence(ctx context.Context, in *CreateOccurrenceRequest, opts ...grpc.CallOption) (*CreateOccurrenceResponse, error) {
	out := new(CreateOccurrenceResponse)
	err := grpc.Invoke(ctx, "/ambition.AmbitionService/CreateOccurrence", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AmbitionService service

type AmbitionServiceServer interface {
	CreateAction(context.Context, *CreateActionRequest) (*CreateActionResponse, error)
	CreateOccurrence(context.Context, *CreateOccurrenceRequest) (*CreateOccurrenceResponse, error)
}

func RegisterAmbitionServiceServer(s *grpc.Server, srv AmbitionServiceServer) {
	s.RegisterService(&_AmbitionService_serviceDesc, srv)
}

func _AmbitionService_CreateAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateActionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AmbitionServiceServer).CreateAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ambition.AmbitionService/CreateAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AmbitionServiceServer).CreateAction(ctx, req.(*CreateActionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AmbitionService_CreateOccurrence_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOccurrenceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AmbitionServiceServer).CreateOccurrence(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ambition.AmbitionService/CreateOccurrence",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AmbitionServiceServer).CreateOccurrence(ctx, req.(*CreateOccurrenceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AmbitionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ambition.AmbitionService",
	HandlerType: (*AmbitionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAction",
			Handler:    _AmbitionService_CreateAction_Handler,
		},
		{
			MethodName: "CreateOccurrence",
			Handler:    _AmbitionService_CreateOccurrence_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("ambition.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 336 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x92, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0xd9, 0xd4, 0xd6, 0x3a, 0x04, 0x95, 0xb5, 0xd8, 0x10, 0x6c, 0xd1, 0x3d, 0x89, 0x87,
	0x06, 0xf4, 0xe6, 0xad, 0x48, 0x0f, 0x1e, 0x54, 0xac, 0xfa, 0x00, 0xdb, 0x75, 0x28, 0x01, 0x9b,
	0x8d, 0x9b, 0x54, 0x04, 0x11, 0xc4, 0xb3, 0x37, 0x1f, 0xcd, 0x57, 0xf0, 0xec, 0x33, 0x98, 0x66,
	0x37, 0x31, 0x49, 0x6b, 0x8e, 0xf3, 0xcf, 0xf0, 0x7f, 0xf3, 0xcf, 0x2e, 0x6c, 0xf2, 0xd9, 0xc4,
	0x8f, 0x7d, 0x19, 0x0c, 0x42, 0x25, 0x63, 0x49, 0xdb, 0x59, 0xed, 0xee, 0x4d, 0xa5, 0x9c, 0x3e,
	0xa0, 0xc7, 0x43, 0xdf, 0xe3, 0x41, 0x20, 0x63, 0xbe, 0x90, 0x23, 0x3d, 0xc7, 0x2e, 0x60, 0xe7,
	0x4c, 0x21, 0x8f, 0x71, 0x28, 0x16, 0xf2, 0x18, 0x1f, 0xe7, 0x18, 0xc5, 0x74, 0x17, 0x5a, 0x77,
	0x11, 0xaa, 0xf3, 0x7b, 0x87, 0xec, 0x93, 0xc3, 0xc6, 0xb8, 0x35, 0x4f, 0x2b, 0xda, 0x07, 0xd0,
	0x83, 0x97, 0x7c, 0x86, 0x8e, 0x95, 0xf4, 0x36, 0xc6, 0xc0, 0x73, 0x85, 0xbd, 0x11, 0xe8, 0x94,
	0xfd, 0xa2, 0x30, 0x81, 0x21, 0x75, 0xa1, 0xad, 0x95, 0xdc, 0xb2, 0xcd, 0x4d, 0x5d, 0x80, 0x59,
	0x35, 0xb0, 0x46, 0x15, 0x46, 0x3b, 0xd0, 0x1c, 0x29, 0x25, 0x95, 0xb3, 0x96, 0xb6, 0x9a, 0xb8,
	0x28, 0xd8, 0x35, 0x74, 0xf5, 0x06, 0x57, 0x42, 0xcc, 0x95, 0xc2, 0x40, 0x60, 0x96, 0xaa, 0x6e,
	0x89, 0xa4, 0x37, 0x0a, 0xa5, 0xb8, 0xf5, 0x4d, 0xae, 0xa4, 0x87, 0xa6, 0x66, 0x1f, 0x04, 0x9c,
	0x65, 0x4f, 0x93, 0x8c, 0x81, 0xfd, 0xa7, 0xe6, 0xc6, 0xb6, 0x2c, 0x68, 0x25, 0xb0, 0x55, 0x03,
	0x6e, 0x94, 0xc1, 0xab, 0x13, 0x1e, 0xff, 0x10, 0xd8, 0x1a, 0x9a, 0xe7, 0xbd, 0x41, 0xf5, 0xe4,
	0x0b, 0xa4, 0x1c, 0xec, 0xe2, 0xdd, 0x69, 0x6f, 0x90, 0x7f, 0x88, 0x15, 0xef, 0xeb, 0xf6, 0xff,
	0x6b, 0xeb, 0x50, 0x8c, 0xbe, 0x7f, 0x7d, 0x7f, 0x5a, 0x36, 0x5b, 0xf7, 0xf4, 0x9e, 0xa7, 0xe4,
	0x88, 0x3e, 0xc3, 0x76, 0xf5, 0x08, 0xf4, 0xa0, 0xea, 0xb3, 0x74, 0x74, 0x97, 0xd5, 0x8d, 0x18,
	0x5c, 0x2f, 0xc5, 0x75, 0x19, 0x35, 0x38, 0xef, 0x25, 0x3b, 0xd7, 0x6b, 0x42, 0x9e, 0xb4, 0xd2,
	0xbf, 0x7a, 0xf2, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x3f, 0x89, 0x03, 0xcc, 0xe5, 0x02, 0x00, 0x00,
}
